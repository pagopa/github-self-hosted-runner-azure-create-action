name: "Create GitHub self hosted runner"
description: "Create a GitHub self hosted runner on Azure"

inputs:
  client_id:
    description: "Azure service principal App Id"
    required: true
  tenant_id:
    description: "Azure tenant id"
    required: true
  subscription_id:
    description: "Azure subscription Id"
    required: true
  container_app_environment_name:
    description: "Azure container app environment name"
    required: true
  resource_group_name:
    description: "Azure container app environment resource group name"
    required: true
  pat_token:
    description: "GitHub PAT token to access to APIs to manage self hosted runner"
    required: true
  self_hosted_runner_image_tag:
    description: "Self hosted runner image tag from https://github.com/pagopa/github-self-hosted-runner-azure/pkgs/container/github-self-hosted-runner-azure"
    required: true
    default: "v1.0.1@sha256:738e3c34e30774d66f84bf186cfd29c1b3911de52cd9fec894d4211a5c64fd9a"

outputs:
  runner_name:
    value: ${{ steps.create_github_runner.outputs.AZURE_CONTAINER_APP_NAME }}
    description: 'Whether a new release was published'

runs:
  using: "composite"
  steps:
      - name: Login
        id: login
        uses: azure/login@v1
        with:
          client-id: ${{ inputs.client_id }}
          tenant-id: ${{ inputs.tenant_id }}
          subscription-id: ${{ inputs.subscription_id }}

      - name: Create GitHub Runner
        id: create_github_runner
        shell: bash
        run: |
          TIMESTAMP=$(date +%s)
          SELF_HOSTED_RUNNER_IMAGE="ghcr.io/pagopa/github-self-hosted-runner-azure:${{ inputs.self_hosted_runner_image_tag }}"

          AZURE_RESOURCE_GROUP_NAME="${{ inputs.resource_group_name }}"
          AZURE_CONTAINER_APP_ENVIRONMENT_NAME="${{ inputs.container_app_environment_name }}"
          AZURE_CONTAINER_APP_NAME="runner-${{ github.run_id }}${TIMESTAMP}"
          echo "[INFO] AZURE_CONTAINER_APP_NAME: ${AZURE_CONTAINER_APP_NAME}"
          echo "::set-output name=AZURE_CONTAINER_APP_NAME::${AZURE_CONTAINER_APP_NAME}"

          GITHUB_TOKEN=$(curl \
            -X POST \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer ${{ inputs.pat_token }}" \
            https://api.github.com/repos/${{ github.repository }}/actions/runners/registration-token | jq ".token" -r)

          az config set extension.use_dynamic_install=yes_without_prompt

          az containerapp create \
            --name "${AZURE_CONTAINER_APP_NAME}" \
            --resource-group "${AZURE_RESOURCE_GROUP_NAME}" \
            --image "${SELF_HOSTED_RUNNER_IMAGE}" \
            --ingress internal \
            --environment "${AZURE_CONTAINER_APP_ENVIRONMENT_NAME}" \
            --secrets github-token="${GITHUB_TOKEN}" \
            --env-vars \
            GITHUB_REPOSITORY="https://github.com/${{ github.repository }}" \
            GITHUB_TOKEN=secretref:github-token

          sleep 30

          START_TIME=$(date +%s)
          while [ $(( $(date +%s) - 300 )) -lt $START_TIME ]; do

            GITHUB_RUNNER_ID=$(curl \
                -H "Accept: application/vnd.github+json" \
                -H "Authorization: Bearer ${{ inputs.pat_token }}" \
                https://api.github.com/repos/${{ github.repository }}/actions/runners | jq '.runners | map(select(.name | startswith("'${AZURE_CONTAINER_APP_NAME}'"))) | .[].id' -r)

            if [ -n "$GITHUB_RUNNER_ID" ]
            then
              echo "[INFO] GITHUB_RUNNER_ID: ${GITHUB_RUNNER_ID} is NOT empty"
              break
            fi

            sleep 5

          done

          if [ -z "$GITHUB_RUNNER_ID" ]
          then
            echo "[INFO] GITHUB_RUNNER_ID is empty"
            exit 1
          fi

          curl \
            -X PUT \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer ${{ inputs.pat_token }}" \
            https://api.github.com/repos/${{ github.repository }}/actions/runners/${GITHUB_RUNNER_ID}/labels \
            -d '{"labels":["'${AZURE_CONTAINER_APP_NAME}'"]}'
